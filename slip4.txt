slip4
1.
#include<stdio.h>
#include<stdlib.h>

int main()
{
	int allocation[100][100],max[100][100],need[100][100],i,j,pr,rs;
	int available[100];
    int ch;

    do
    {
        printf("\n 1. Accept Available");
        printf("\n 2. Accept Allocation, Max");
        printf("\n 3. Display Need");
        printf("\n 4. Display Available");
        printf("\n 5. Exit");

        printf("\n Enter Choice : ");
        scanf("%d",&ch);

        if(ch==1)
        {
            printf("\n Enter Available Resources : ");
            for(j=0;j<rs;j++)
            {
                printf("\n %c : ",j+65);
                scanf("%d",&available[j]);
            }
        }
        else if(ch==2)
        {
            printf("\n Enter No. of Processes : ");
            scanf("%d",&pr);
            
            printf("\n Enter No. of Resources : ");
            scanf("%d",&rs);
            
            printf("\n Enter Allocation Data : ");
            for(i=0;i<pr;i++)
            {
                for(j=0;j<rs;j++)
                {
                    scanf("%d",&allocation[i][j]);
                }
            }	

            printf("\n Enter Max Data : ");
            for(i=0;i<pr;i++)
            {
                for(j=0;j<rs;j++)
                {
                    scanf("%d",&max[i][j]);
                }
            }
        }
        else if(ch==3)
        {
            for(i=0;i<pr;i++)
            {
                for(j=0;j<rs;j++)
                {
                    need[i][j] = max[i][j] - allocation[i][j];
                }
            }            
        
            printf("\n Need Matrix : ");
            for(i=0;i<pr;i++)
            {
                printf("\n");
                for(j=0;j<rs;j++)
                {
                    printf(" %d ",need[i][j]);
                }
            }
        }
        else if(ch==4)
        {
            printf("\n Available Resources : ");
            for(j=0;j<rs;j++)
            {
                printf("\n %c : %d",j+65, available[j]);
            }
        }
        else if(ch==5)
        {
            exit(0);
        }
        else
        {
            printf("\n Invalid Choice");
        }
    }while(1);

	return 0;
}

2.
#include<stdio.h>

int main()
{
    int RQ[100],i,j,n,TotalHeadMoment=0,initial,size,move,temp;

    printf("\n Enter the number of Requests : ");
    scanf("%d",&n);

    printf("\n Enter the Requests sequence : ");
    for(i=0;i<n;i++)
	{
	    scanf("%d",&RQ[i]);
	}
	
	printf("\n Enter initial head position : ");
    scanf("%d",&initial);
    
	printf("\n Enter total disk size : ");
    scanf("%d",&size);
    
	printf("\n Enter the head movement direction for Right 1 and for Left 0 : ");
    scanf("%d",&move); 
    
    for(i=1;i<n;i++)
    {
        for(j=0;j<n-i;j++)
        {
            if(RQ[j]>RQ[j+1])
            {
                temp=RQ[j];
                RQ[j]=RQ[j+1];
                RQ[j+1]=temp;
            }
        }
    }

    int index;
    for(i=0;i<n;i++)
    {
        if(initial<RQ[i])
        {
            index=i;
            break;
        }
    }

    if(move==1)
    {
        for(i=index;i<n;i++)
        {
            TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
            initial=RQ[i];
        }

        TotalHeadMoment=TotalHeadMoment+abs(size-RQ[i-1]-1);
        initial = size-1;
        
        for(i=index-1;i>=0;i--)
        {
             TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
             initial=RQ[i];
        }
    }
    else
    {
        for(i=index-1;i>=0;i--)
        {
            TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
            initial=RQ[i];
        }

        TotalHeadMoment=TotalHeadMoment+abs(RQ[i+1]-0);
        initial =0;
        
        for(i=index;i<n;i++)
        {
             TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
             initial=RQ[i];
        }
    }
    
    printf("\n Total head movement is : %d",TotalHeadMoment);
    
	return 0;
}
 2.
#include<stdio.h>

int main()
{
    int RQ[100],i,j,n,TotalHeadMoment=0,initial,size,move,temp;

    printf("\n Enter the number of Requests : ");
    scanf("%d",&n);

    printf("\n Enter the Requests sequence : ");
    for(i=0;i<n;i++)
	{
	    scanf("%d",&RQ[i]);
	}
	
	printf("\n Enter initial head position : ");
    scanf("%d",&initial);
    
	printf("\n Enter total disk size : ");
    scanf("%d",&size);
    
	printf("\n Enter the head movement direction for Right 1 and for Left 0 : ");
    scanf("%d",&move); 
    
    for(i=1;i<n;i++)
    {
        for(j=0;j<n-i;j++)
        {
            if(RQ[j]>RQ[j+1])
            {
                temp=RQ[j];
                RQ[j]=RQ[j+1];
                RQ[j+1]=temp;
            }
        }
    }

    int index;
    for(i=0;i<n;i++)
    {
        if(initial<RQ[i])
        {
            index=i;
            break;
        }
    }

    if(move==1)
    {
        for(i=index;i<n;i++)
        {
            TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
            initial=RQ[i];
        }

        TotalHeadMoment=TotalHeadMoment+abs(size-RQ[i-1]-1);
        initial = size-1;
        
        for(i=index-1;i>=0;i--)
        {
             TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
             initial=RQ[i];
        }
    }
    else
    {
        for(i=index-1;i>=0;i--)
        {
            TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
            initial=RQ[i];
        }

        TotalHeadMoment=TotalHeadMoment+abs(RQ[i+1]-0);
        initial =0;
        
        for(i=index;i<n;i++)
        {
             TotalHeadMoment=TotalHeadMoment+abs(RQ[i]-initial);
             initial=RQ[i];
        }
    }
    
    printf("\n Total head movement is : %d",TotalHeadMoment);
    
	return 0;
}